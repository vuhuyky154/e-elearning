// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v5.28.1
// source: proto/servicegrpc/quizz.proto

package servicegrpc

import (
	enumgrpc "app/generated/proto/enumgrpc"
	sharedgrpc "app/generated/proto/sharedgrpc"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Quizz struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         uint64              `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Ask        string              `protobuf:"bytes,2,opt,name=ask,proto3" json:"ask,omitempty"`
	Time       int32               `protobuf:"varint,3,opt,name=time,proto3" json:"time,omitempty"`
	ResultType enumgrpc.ResultType `protobuf:"varint,4,opt,name=resultType,proto3,enum=app.enumgrpc.ResultType" json:"resultType,omitempty"`
	Result     []string            `protobuf:"bytes,5,rep,name=result,proto3" json:"result,omitempty"`
	Option     []string            `protobuf:"bytes,6,rep,name=option,proto3" json:"option,omitempty"`
	EntityType enumgrpc.EntityType `protobuf:"varint,7,opt,name=entityType,proto3,enum=app.enumgrpc.EntityType" json:"entityType,omitempty"`
	EntityId   uint64              `protobuf:"varint,8,opt,name=entityId,proto3" json:"entityId,omitempty"`
	CreatedAt  int64               `protobuf:"varint,9,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt  int64               `protobuf:"varint,10,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	DeletedAt  int64               `protobuf:"varint,11,opt,name=deletedAt,proto3" json:"deletedAt,omitempty"`
}

func (x *Quizz) Reset() {
	*x = Quizz{}
	mi := &file_proto_servicegrpc_quizz_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Quizz) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Quizz) ProtoMessage() {}

func (x *Quizz) ProtoReflect() protoreflect.Message {
	mi := &file_proto_servicegrpc_quizz_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Quizz.ProtoReflect.Descriptor instead.
func (*Quizz) Descriptor() ([]byte, []int) {
	return file_proto_servicegrpc_quizz_proto_rawDescGZIP(), []int{0}
}

func (x *Quizz) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Quizz) GetAsk() string {
	if x != nil {
		return x.Ask
	}
	return ""
}

func (x *Quizz) GetTime() int32 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *Quizz) GetResultType() enumgrpc.ResultType {
	if x != nil {
		return x.ResultType
	}
	return enumgrpc.ResultType(0)
}

func (x *Quizz) GetResult() []string {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *Quizz) GetOption() []string {
	if x != nil {
		return x.Option
	}
	return nil
}

func (x *Quizz) GetEntityType() enumgrpc.EntityType {
	if x != nil {
		return x.EntityType
	}
	return enumgrpc.EntityType(0)
}

func (x *Quizz) GetEntityId() uint64 {
	if x != nil {
		return x.EntityId
	}
	return 0
}

func (x *Quizz) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *Quizz) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *Quizz) GetDeletedAt() int64 {
	if x != nil {
		return x.DeletedAt
	}
	return 0
}

type GetListQuizzRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntityId   uint64              `protobuf:"varint,1,opt,name=entityId,proto3" json:"entityId,omitempty"`
	EntityType enumgrpc.EntityType `protobuf:"varint,7,opt,name=entityType,proto3,enum=app.enumgrpc.EntityType" json:"entityType,omitempty"`
}

func (x *GetListQuizzRequest) Reset() {
	*x = GetListQuizzRequest{}
	mi := &file_proto_servicegrpc_quizz_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetListQuizzRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListQuizzRequest) ProtoMessage() {}

func (x *GetListQuizzRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_servicegrpc_quizz_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListQuizzRequest.ProtoReflect.Descriptor instead.
func (*GetListQuizzRequest) Descriptor() ([]byte, []int) {
	return file_proto_servicegrpc_quizz_proto_rawDescGZIP(), []int{1}
}

func (x *GetListQuizzRequest) GetEntityId() uint64 {
	if x != nil {
		return x.EntityId
	}
	return 0
}

func (x *GetListQuizzRequest) GetEntityType() enumgrpc.EntityType {
	if x != nil {
		return x.EntityType
	}
	return enumgrpc.EntityType(0)
}

type QuizzResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         uint64              `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Ask        string              `protobuf:"bytes,2,opt,name=ask,proto3" json:"ask,omitempty"`
	Time       int32               `protobuf:"varint,3,opt,name=time,proto3" json:"time,omitempty"`
	ResultType enumgrpc.ResultType `protobuf:"varint,4,opt,name=resultType,proto3,enum=app.enumgrpc.ResultType" json:"resultType,omitempty"`
	Result     []string            `protobuf:"bytes,5,rep,name=result,proto3" json:"result,omitempty"`
	Option     []string            `protobuf:"bytes,6,rep,name=option,proto3" json:"option,omitempty"`
	EntityType enumgrpc.EntityType `protobuf:"varint,7,opt,name=entityType,proto3,enum=app.enumgrpc.EntityType" json:"entityType,omitempty"`
	EntityId   uint64              `protobuf:"varint,8,opt,name=entityId,proto3" json:"entityId,omitempty"`
	CreatedAt  int64               `protobuf:"varint,9,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt  int64               `protobuf:"varint,10,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	DeletedAt  int64               `protobuf:"varint,11,opt,name=deletedAt,proto3" json:"deletedAt,omitempty"`
}

func (x *QuizzResponse) Reset() {
	*x = QuizzResponse{}
	mi := &file_proto_servicegrpc_quizz_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QuizzResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuizzResponse) ProtoMessage() {}

func (x *QuizzResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_servicegrpc_quizz_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuizzResponse.ProtoReflect.Descriptor instead.
func (*QuizzResponse) Descriptor() ([]byte, []int) {
	return file_proto_servicegrpc_quizz_proto_rawDescGZIP(), []int{2}
}

func (x *QuizzResponse) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *QuizzResponse) GetAsk() string {
	if x != nil {
		return x.Ask
	}
	return ""
}

func (x *QuizzResponse) GetTime() int32 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *QuizzResponse) GetResultType() enumgrpc.ResultType {
	if x != nil {
		return x.ResultType
	}
	return enumgrpc.ResultType(0)
}

func (x *QuizzResponse) GetResult() []string {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *QuizzResponse) GetOption() []string {
	if x != nil {
		return x.Option
	}
	return nil
}

func (x *QuizzResponse) GetEntityType() enumgrpc.EntityType {
	if x != nil {
		return x.EntityType
	}
	return enumgrpc.EntityType(0)
}

func (x *QuizzResponse) GetEntityId() uint64 {
	if x != nil {
		return x.EntityId
	}
	return 0
}

func (x *QuizzResponse) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *QuizzResponse) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *QuizzResponse) GetDeletedAt() int64 {
	if x != nil {
		return x.DeletedAt
	}
	return 0
}

type CreateQuizzRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ask        string              `protobuf:"bytes,2,opt,name=ask,proto3" json:"ask,omitempty"`
	Time       int32               `protobuf:"varint,3,opt,name=time,proto3" json:"time,omitempty"`
	ResultType enumgrpc.ResultType `protobuf:"varint,4,opt,name=resultType,proto3,enum=app.enumgrpc.ResultType" json:"resultType,omitempty"`
	Result     []string            `protobuf:"bytes,5,rep,name=result,proto3" json:"result,omitempty"`
	Option     []string            `protobuf:"bytes,6,rep,name=option,proto3" json:"option,omitempty"`
	EntityType enumgrpc.EntityType `protobuf:"varint,7,opt,name=entityType,proto3,enum=app.enumgrpc.EntityType" json:"entityType,omitempty"`
	EntityId   uint64              `protobuf:"varint,8,opt,name=entityId,proto3" json:"entityId,omitempty"`
}

func (x *CreateQuizzRequest) Reset() {
	*x = CreateQuizzRequest{}
	mi := &file_proto_servicegrpc_quizz_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateQuizzRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateQuizzRequest) ProtoMessage() {}

func (x *CreateQuizzRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_servicegrpc_quizz_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateQuizzRequest.ProtoReflect.Descriptor instead.
func (*CreateQuizzRequest) Descriptor() ([]byte, []int) {
	return file_proto_servicegrpc_quizz_proto_rawDescGZIP(), []int{3}
}

func (x *CreateQuizzRequest) GetAsk() string {
	if x != nil {
		return x.Ask
	}
	return ""
}

func (x *CreateQuizzRequest) GetTime() int32 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *CreateQuizzRequest) GetResultType() enumgrpc.ResultType {
	if x != nil {
		return x.ResultType
	}
	return enumgrpc.ResultType(0)
}

func (x *CreateQuizzRequest) GetResult() []string {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *CreateQuizzRequest) GetOption() []string {
	if x != nil {
		return x.Option
	}
	return nil
}

func (x *CreateQuizzRequest) GetEntityType() enumgrpc.EntityType {
	if x != nil {
		return x.EntityType
	}
	return enumgrpc.EntityType(0)
}

func (x *CreateQuizzRequest) GetEntityId() uint64 {
	if x != nil {
		return x.EntityId
	}
	return 0
}

type UpdateQuizzRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      uint64              `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Payload *UpdateQuizzPayload `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *UpdateQuizzRequest) Reset() {
	*x = UpdateQuizzRequest{}
	mi := &file_proto_servicegrpc_quizz_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateQuizzRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateQuizzRequest) ProtoMessage() {}

func (x *UpdateQuizzRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_servicegrpc_quizz_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateQuizzRequest.ProtoReflect.Descriptor instead.
func (*UpdateQuizzRequest) Descriptor() ([]byte, []int) {
	return file_proto_servicegrpc_quizz_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateQuizzRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateQuizzRequest) GetPayload() *UpdateQuizzPayload {
	if x != nil {
		return x.Payload
	}
	return nil
}

type UpdateQuizzPayload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ask        string              `protobuf:"bytes,1,opt,name=ask,proto3" json:"ask,omitempty"`
	Time       int32               `protobuf:"varint,2,opt,name=time,proto3" json:"time,omitempty"`
	ResultType enumgrpc.ResultType `protobuf:"varint,3,opt,name=resultType,proto3,enum=app.enumgrpc.ResultType" json:"resultType,omitempty"`
	Result     []string            `protobuf:"bytes,4,rep,name=result,proto3" json:"result,omitempty"`
	Option     []string            `protobuf:"bytes,5,rep,name=option,proto3" json:"option,omitempty"`
}

func (x *UpdateQuizzPayload) Reset() {
	*x = UpdateQuizzPayload{}
	mi := &file_proto_servicegrpc_quizz_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateQuizzPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateQuizzPayload) ProtoMessage() {}

func (x *UpdateQuizzPayload) ProtoReflect() protoreflect.Message {
	mi := &file_proto_servicegrpc_quizz_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateQuizzPayload.ProtoReflect.Descriptor instead.
func (*UpdateQuizzPayload) Descriptor() ([]byte, []int) {
	return file_proto_servicegrpc_quizz_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateQuizzPayload) GetAsk() string {
	if x != nil {
		return x.Ask
	}
	return ""
}

func (x *UpdateQuizzPayload) GetTime() int32 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *UpdateQuizzPayload) GetResultType() enumgrpc.ResultType {
	if x != nil {
		return x.ResultType
	}
	return enumgrpc.ResultType(0)
}

func (x *UpdateQuizzPayload) GetResult() []string {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *UpdateQuizzPayload) GetOption() []string {
	if x != nil {
		return x.Option
	}
	return nil
}

type GetListByEntityIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Quizzs []*QuizzResponse `protobuf:"bytes,1,rep,name=quizzs,proto3" json:"quizzs,omitempty"`
	Total  int64            `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *GetListByEntityIdResponse) Reset() {
	*x = GetListByEntityIdResponse{}
	mi := &file_proto_servicegrpc_quizz_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetListByEntityIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListByEntityIdResponse) ProtoMessage() {}

func (x *GetListByEntityIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_servicegrpc_quizz_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListByEntityIdResponse.ProtoReflect.Descriptor instead.
func (*GetListByEntityIdResponse) Descriptor() ([]byte, []int) {
	return file_proto_servicegrpc_quizz_proto_rawDescGZIP(), []int{6}
}

func (x *GetListByEntityIdResponse) GetQuizzs() []*QuizzResponse {
	if x != nil {
		return x.Quizzs
	}
	return nil
}

func (x *GetListByEntityIdResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

var File_proto_servicegrpc_quizz_proto protoreflect.FileDescriptor

var file_proto_servicegrpc_quizz_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x67,
	0x72, 0x70, 0x63, 0x2f, 0x71, 0x75, 0x69, 0x7a, 0x7a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x09, 0x61, 0x70, 0x70, 0x2e, 0x71, 0x75, 0x69, 0x7a, 0x7a, 0x1a, 0x22, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x65, 0x6e, 0x75, 0x6d, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x71, 0x75, 0x69, 0x7a, 0x7a,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x67, 0x72, 0x70, 0x63,
	0x2f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x65, 0x6d, 0x70, 0x74,
	0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xd7, 0x02, 0x0a, 0x05, 0x51, 0x75, 0x69, 0x7a,
	0x7a, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x73, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x61, 0x73, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x38, 0x0a, 0x0a, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x61, 0x70,
	0x70, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x38, 0x0a, 0x0a, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x65, 0x6e, 0x75, 0x6d,
	0x67, 0x72, 0x70, 0x63, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x0a, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x22, 0x6b, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x51, 0x75, 0x69, 0x7a,
	0x7a, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x49, 0x64, 0x12, 0x38, 0x0a, 0x0a, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x65,
	0x6e, 0x75, 0x6d, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x0a, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x22, 0xdf,
	0x02, 0x0a, 0x0d, 0x51, 0x75, 0x69, 0x7a, 0x7a, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x10, 0x0a, 0x03, 0x61, 0x73, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x61,
	0x73, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x38, 0x0a, 0x0a, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x61, 0x70, 0x70,
	0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x38, 0x0a, 0x0a, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x67,
	0x72, 0x70, 0x63, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x22, 0xfa, 0x01, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x51, 0x75, 0x69, 0x7a, 0x7a,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x73, 0x6b, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x61, 0x73, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x38, 0x0a,
	0x0a, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x18, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x67, 0x72, 0x70, 0x63,
	0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x06, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x38, 0x0a, 0x0a, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x54, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x61, 0x70,
	0x70, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x22, 0x5d, 0x0a,
	0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x51, 0x75, 0x69, 0x7a, 0x7a, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x37, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x71, 0x75, 0x69, 0x7a, 0x7a,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x51, 0x75, 0x69, 0x7a, 0x7a, 0x50, 0x61, 0x79, 0x6c,
	0x6f, 0x61, 0x64, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0xa4, 0x01, 0x0a,
	0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x51, 0x75, 0x69, 0x7a, 0x7a, 0x50, 0x61, 0x79, 0x6c,
	0x6f, 0x61, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x73, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x61, 0x73, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x38, 0x0a, 0x0a, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e,
	0x61, 0x70, 0x70, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x63, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79,
	0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x30, 0x0a, 0x06, 0x71, 0x75, 0x69, 0x7a, 0x7a, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x71, 0x75, 0x69, 0x7a, 0x7a, 0x2e, 0x51, 0x75, 0x69,
	0x7a, 0x7a, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x06, 0x71, 0x75, 0x69, 0x7a,
	0x7a, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x32, 0xec, 0x02, 0x0a, 0x0c, 0x51, 0x75, 0x69,
	0x7a, 0x7a, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x39, 0x0a, 0x07, 0x47, 0x65, 0x74,
	0x42, 0x79, 0x49, 0x64, 0x12, 0x12, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65,
	0x64, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x49, 0x44, 0x1a, 0x18, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x71,
	0x75, 0x69, 0x7a, 0x7a, 0x2e, 0x51, 0x75, 0x69, 0x7a, 0x7a, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x5b, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x42,
	0x79, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x1e, 0x2e, 0x61, 0x70, 0x70, 0x2e,
	0x71, 0x75, 0x69, 0x7a, 0x7a, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x51, 0x75, 0x69,
	0x7a, 0x7a, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x61, 0x70, 0x70, 0x2e,
	0x71, 0x75, 0x69, 0x7a, 0x7a, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x45,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x42, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x51, 0x75, 0x69, 0x7a, 0x7a,
	0x12, 0x1d, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x71, 0x75, 0x69, 0x7a, 0x7a, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x51, 0x75, 0x69, 0x7a, 0x7a, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x12, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x67, 0x72, 0x70, 0x63,
	0x2e, 0x49, 0x44, 0x22, 0x00, 0x12, 0x45, 0x0a, 0x0b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x51,
	0x75, 0x69, 0x7a, 0x7a, 0x12, 0x1d, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x71, 0x75, 0x69, 0x7a, 0x7a,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x51, 0x75, 0x69, 0x7a, 0x7a, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64,
	0x67, 0x72, 0x70, 0x63, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x39, 0x0a, 0x0a,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x79, 0x49, 0x64, 0x12, 0x12, 0x2e, 0x61, 0x70, 0x70,
	0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x49, 0x44, 0x1a, 0x15,
	0x2e, 0x61, 0x70, 0x70, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x67, 0x72, 0x70, 0x63, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x42, 0x21, 0x5a, 0x1f, 0x61, 0x70, 0x70, 0x2f, 0x67,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x67, 0x72, 0x70, 0x63, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_proto_servicegrpc_quizz_proto_rawDescOnce sync.Once
	file_proto_servicegrpc_quizz_proto_rawDescData = file_proto_servicegrpc_quizz_proto_rawDesc
)

func file_proto_servicegrpc_quizz_proto_rawDescGZIP() []byte {
	file_proto_servicegrpc_quizz_proto_rawDescOnce.Do(func() {
		file_proto_servicegrpc_quizz_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_servicegrpc_quizz_proto_rawDescData)
	})
	return file_proto_servicegrpc_quizz_proto_rawDescData
}

var file_proto_servicegrpc_quizz_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_proto_servicegrpc_quizz_proto_goTypes = []any{
	(*Quizz)(nil),                     // 0: app.quizz.Quizz
	(*GetListQuizzRequest)(nil),       // 1: app.quizz.GetListQuizzRequest
	(*QuizzResponse)(nil),             // 2: app.quizz.QuizzResponse
	(*CreateQuizzRequest)(nil),        // 3: app.quizz.CreateQuizzRequest
	(*UpdateQuizzRequest)(nil),        // 4: app.quizz.UpdateQuizzRequest
	(*UpdateQuizzPayload)(nil),        // 5: app.quizz.UpdateQuizzPayload
	(*GetListByEntityIdResponse)(nil), // 6: app.quizz.GetListByEntityIdResponse
	(enumgrpc.ResultType)(0),          // 7: app.enumgrpc.ResultType
	(enumgrpc.EntityType)(0),          // 8: app.enumgrpc.EntityType
	(*sharedgrpc.ID)(nil),             // 9: app.sharedgrpc.ID
	(*sharedgrpc.Empty)(nil),          // 10: app.sharedgrpc.Empty
}
var file_proto_servicegrpc_quizz_proto_depIdxs = []int32{
	7,  // 0: app.quizz.Quizz.resultType:type_name -> app.enumgrpc.ResultType
	8,  // 1: app.quizz.Quizz.entityType:type_name -> app.enumgrpc.EntityType
	8,  // 2: app.quizz.GetListQuizzRequest.entityType:type_name -> app.enumgrpc.EntityType
	7,  // 3: app.quizz.QuizzResponse.resultType:type_name -> app.enumgrpc.ResultType
	8,  // 4: app.quizz.QuizzResponse.entityType:type_name -> app.enumgrpc.EntityType
	7,  // 5: app.quizz.CreateQuizzRequest.resultType:type_name -> app.enumgrpc.ResultType
	8,  // 6: app.quizz.CreateQuizzRequest.entityType:type_name -> app.enumgrpc.EntityType
	5,  // 7: app.quizz.UpdateQuizzRequest.payload:type_name -> app.quizz.UpdateQuizzPayload
	7,  // 8: app.quizz.UpdateQuizzPayload.resultType:type_name -> app.enumgrpc.ResultType
	2,  // 9: app.quizz.GetListByEntityIdResponse.quizzs:type_name -> app.quizz.QuizzResponse
	9,  // 10: app.quizz.QuizzService.GetById:input_type -> app.sharedgrpc.ID
	1,  // 11: app.quizz.QuizzService.GetListByEntityId:input_type -> app.quizz.GetListQuizzRequest
	3,  // 12: app.quizz.QuizzService.CreateQuizz:input_type -> app.quizz.CreateQuizzRequest
	4,  // 13: app.quizz.QuizzService.UpdateQuizz:input_type -> app.quizz.UpdateQuizzRequest
	9,  // 14: app.quizz.QuizzService.DeleteById:input_type -> app.sharedgrpc.ID
	2,  // 15: app.quizz.QuizzService.GetById:output_type -> app.quizz.QuizzResponse
	6,  // 16: app.quizz.QuizzService.GetListByEntityId:output_type -> app.quizz.GetListByEntityIdResponse
	9,  // 17: app.quizz.QuizzService.CreateQuizz:output_type -> app.sharedgrpc.ID
	10, // 18: app.quizz.QuizzService.UpdateQuizz:output_type -> app.sharedgrpc.Empty
	10, // 19: app.quizz.QuizzService.DeleteById:output_type -> app.sharedgrpc.Empty
	15, // [15:20] is the sub-list for method output_type
	10, // [10:15] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_proto_servicegrpc_quizz_proto_init() }
func file_proto_servicegrpc_quizz_proto_init() {
	if File_proto_servicegrpc_quizz_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_servicegrpc_quizz_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_servicegrpc_quizz_proto_goTypes,
		DependencyIndexes: file_proto_servicegrpc_quizz_proto_depIdxs,
		MessageInfos:      file_proto_servicegrpc_quizz_proto_msgTypes,
	}.Build()
	File_proto_servicegrpc_quizz_proto = out.File
	file_proto_servicegrpc_quizz_proto_rawDesc = nil
	file_proto_servicegrpc_quizz_proto_goTypes = nil
	file_proto_servicegrpc_quizz_proto_depIdxs = nil
}
